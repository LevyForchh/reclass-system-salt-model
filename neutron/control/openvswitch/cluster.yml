classes:
- system.neutron.control.cluster
- system.salt.minion.cert.rabbitmq.clients.openstack.neutron
parameters:
  _param:
    neutron_control_dvr: True
    neutron_l3_ha: False
    neutron_global_physnet_mtu: 1500
    neutron_external_mtu: 1500
    neutron_tenant_network_types: "flat,vxlan"
    neutron_enable_qos: False
    neutron_enable_vlan_aware_vms: False
    neutron_enable_bgp_vpn: False
    neutron_bgp_vpn_driver: bagpipe
    cluster_internal_protocol: 'http'
    openstack_rabbitmq_x509_enabled: False
    rabbitmq_ssl_enabled: False
  neutron:
    server:
      role: ${_param:openstack_node_role}
      global_physnet_mtu: ${_param:neutron_global_physnet_mtu}
      l3_ha: ${_param:neutron_l3_ha}
      dvr: ${_param:neutron_control_dvr}
      qos: ${_param:neutron_enable_qos}
      vlan_aware_vms: ${_param:neutron_enable_vlan_aware_vms}
      bgp_vpn:
        enabled: ${_param:neutron_enable_bgp_vpn}
        driver: ${_param:neutron_bgp_vpn_driver}
      backend:
        engine: ml2
        tenant_network_types: "${_param:neutron_tenant_network_types}"
        external_mtu: ${_param:neutron_external_mtu}
        mechanism:
          ovs:
            driver: openvswitch
      compute:
        region: ${_param:openstack_region}
      database:
        host: ${_param:openstack_database_address}
      identity:
        region: ${_param:openstack_region}
        protocol: ${_param:cluster_internal_protocol}
      message_queue:
        members:
          - host: ${_param:openstack_message_queue_node01_address}
          - host: ${_param:openstack_message_queue_node02_address}
          - host: ${_param:openstack_message_queue_node03_address}
        x509:
          enabled: ${_param:openstack_rabbitmq_x509_enabled}
          ca_file: ${_param:rabbitmq_neutron_ssl_ca_file}
          key_file: ${_param:rabbitmq_neutron_client_ssl_key_file}
          cert_file: ${_param:rabbitmq_neutron_client_ssl_cert_file}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
